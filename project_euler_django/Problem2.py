#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



#track the last and second to last numbers in our fibonacci sequence
secondToLastFibNum = 0
lastFibNum = 1

#track the sum of even fibonacci numbers
sumOfEvenFibs = 0

#while our current fibonacci number is less than 4 million
while lastFibNum < 4000000 :
    #store newly calculated fibonacci number in a variable
    newFibNum = secondToLastFibNum + lastFibNum
    
    #if the new fibonacci number is even, add it to our running total
    if newFibNum % 2 == 0 :
        sumOfEvenFibs += newFibNum
        
    #maintain our variables for tracking previous two fibonacci numbers
    secondToLastFibNum = lastFibNum
    lastFibNum = newFibNum
    
#output
print sumOfEvenFibs